/*
	Example: A tip calculation FIS (fuzzy inference system)
	Calculates tip based on 'servie' and 'food'

	If you want to about this example (and fuzzy logic), please 
	read Matlab's tutorial on fuzzy logic toolbox 
	http://www.mathworks.com/access/helpdesk/help/pdf_doc/fuzzy/fuzzy.pdf

									Pablo Cingolani 
									pcingola@users.sourceforge.net
*/

FUNCTION_BLOCK tipper	// Block definition (there may be more than one block per file)

VAR_INPUT				// Define input variables
	time : REAL;
	help : REAL;
	mistakes : REAL;
END_VAR

VAR_OUTPUT				// Define output variable
	checkLevel : REAL;
END_VAR

FUZZIFY time		// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM low := (0, 1) (20, 0) ; 
	TERM average := (15, 0) (20,1) (40,1) (50,0);
	TERM high := (40, 0) (60, 1);
END_FUZZIFY

FUZZIFY help			// Fuzzify input variable 'food': { 'rancid', 'delicious' }
	TERM low := (0, 1) (1.5,0);
	Term average:= (0.5,0) (1,1);
	TERM high := (1,0) (3,1);
END_FUZZIFY

FUZZIFY mistakes			// Fuzzify input variable 'food': { 'rancid', 'delicious' }
	TERM low := (0, 1) (1.5,0);
	Term average:= (0.5,0) (1,1);
	TERM high := (1,0) (3,1);
END_FUZZIFY

DEFUZZIFY checkLevel			// Defzzzify output variable 'tip' : {'cheap', 'average', 'generous' }
	TERM down := (0,1) (6,0);
	TERM stay := (5,0) (7,1) (8,0);
	TERM up := (7,0) (10,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

RULEBLOCK No1
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'max' accumulation method
	
	
	RULE 1 : IF time is low AND help is low AND mistakes is low THEN checkLevel is up;
	RULE 2 : IF time is low AND mistakes is high THEN checkLevel is down;
	RULE 3 : IF time is low AND help is high THEN checkLevel is stay;
	RULE 4 : IF time is high AND mistakes is high AND help is high THEN checkLevel is down;
	RULE 5 : IF time is average THEN checkLevel is stay;
	RULE 6 : IF time is high AND mistakes is low AND help is low THEN checkLevel is stay;
	RULE 7 : IF mistakes is high THEN checkLevel is down;
	RULE 8 : IF mistakes is average AND time is low then checkLevel is stay;
	RULE 9 : IF help is average AND time is low then checkLevel is stay;
	RULE 10: IF help is low AND time is average then checkLevel is down;


	
END_RULEBLOCK

END_FUNCTION_BLOCK